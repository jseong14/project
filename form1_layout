using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using MySql.Data.MySqlClient;

namespace SmartFarm
{
    public partial class Form1 : Form
    {

        string Conn = "Server=localhost;Database=example;Uid=*****;Pwd=*****;";

        public Form1()
        {
            InitializeComponent();

        }

        private void button1_Click(object sender, EventArgs e)
        {


            if (textBox1.Text == "")
            {
                MessageBox.Show("포트번호를 입력하세요.");
            }
            else
            {
                serialPort1.PortName = textBox1.Text;
                if (serialPort1.IsOpen == false)
                {
                    serialPort1.Open();
                }
            }


        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen == true)
            {
                serialPort1.Close();
            }
            MessageBox.Show("프로그램을 종료합니다.", "종료", MessageBoxButtons.OK, MessageBoxIcon.Information);
            Application.Exit();
        }

        private void serialPort1_DataReceived(object sender, System.IO.Ports.SerialDataReceivedEventArgs e)
        {
            string rawdata = serialPort1.ReadLine();
            string[] data = rawdata.Split('/');


            UpdateUIControls(data);

            string date = DateTime.Now.ToString();


            //DB에 데이터 저장
            using (MySqlConnection conn = new MySqlConnection(Conn))
            {
                conn.Open();
                string query = "INSERT INTO autofarm (soil, gas, light, temp, humi, date) VALUES (@soil, @gas, @light, @temp, @humi, @date)";
                MySqlCommand msc = new MySqlCommand(query, conn);
                msc.Parameters.AddWithValue("@soil", data[0]);
                msc.Parameters.AddWithValue("@gas", data[1]);
                msc.Parameters.AddWithValue("@light", data[2]);
                msc.Parameters.AddWithValue("@temp", data[3]);
                msc.Parameters.AddWithValue("@humi", data[4]);
                msc.Parameters.AddWithValue("@date", date);
                msc.ExecuteNonQuery();
            }

        }
        private void UpdateUIControls(string[] data)
        {
            if (InvokeRequired)
            {
                this.Invoke((MethodInvoker)delegate
                {
                    UpdateUIControls(data);
                });
                return;
            }

            label2.Text = data[0];
            label3.Text = data[1];
            label4.Text = data[2];
            label5.Text = data[3];
            label6.Text = data[4].Replace("\n", "").Replace("\r", "");
        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void label13_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {

        }

        private void listView1_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void chart1_Click(object sender, EventArgs e)
        {

        }

        private void button4_Click(object sender, EventArgs e)
        {

        }

        private void tableLayoutPanel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void tableLayoutPanel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void button5_Click(object sender, EventArgs e)
        {


        }

        private void label2_Click_1(object sender, EventArgs e)
        {

        }

        private void label4_Click(object sender, EventArgs e)
        {
        }

        private void label6_Click(object sender, EventArgs e)
        {

        }

        private void label3_Click(object sender, EventArgs e)
        {

        }

        private void label5_Click(object sender, EventArgs e)
        {

        }

        private void button4_Click_1(object sender, EventArgs e)
        {
            if (listView11.Items.Count > 0)
            {
                string path = "./output.csv";

                try
                {
                    using (FileStream fs = new FileStream(path, FileMode.Create))
                    using (StreamWriter sw = new StreamWriter(fs))
                    {
                        for (int i = 0; i < listView11.Items.Count; i++)
                        {
                            string line = "";
                            // 0~5 까지는 ,로 구분
                            for (int j = 0; j < 6; j++)
                            {
                                line += listView11.Items[i].SubItems[j].Text + "\t";
                            }
                            // 마지막 6
                            line += listView11.Items[i].SubItems[6].Text;

                            sw.WriteLine(line);
                        }
                    }

                    MessageBox.Show("파일이 성공적으로 저장되었습니다.", "파일 저장", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                catch
                {

                }
            }
            else
            {
                MessageBox.Show("저장할 데이터가 없습니다.", "확인", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void button5_Click_1(object sender, EventArgs e)
        {
            System.Diagnostics.Process.Start("https://autofarm.loca.lt");
        }

        private void button3_Click_1(object sender, EventArgs e)
        {
            using (MySqlConnection conn = new MySqlConnection(Conn))
            {
                DataSet ds = new DataSet();
                string sql = "select * from autofarm order by date desc limit 10"; //시간을 기준으로 내림차순 정렬 후 15개의 데이터만 저장
                MySqlDataAdapter adpt = new MySqlDataAdapter(sql, conn);
                adpt.Fill(ds, "autofarm");

                listView11.Items.Clear(); // 버튼을 누를때마다 데이터를 지우고 새로 받음


                for (int i = 0; i < ds.Tables[0].Rows.Count; i++) // 레코드 개수 만큼 루프를 돌린다.
                {
                    //한레코드씩 리스트업
                    ListViewItem lvi = new ListViewItem();
                    lvi.Text = ds.Tables[0].Rows[i]["num"].ToString();

                    string soil = ds.Tables[0].Rows[i]["soil"].ToString();
                    string gas = ds.Tables[0].Rows[i]["gas"].ToString();
                    string light = ds.Tables[0].Rows[i]["light"].ToString();
                    string temp = ds.Tables[0].Rows[i]["temp"].ToString();
                    string humi = ds.Tables[0].Rows[i]["humi"].ToString();

                    lvi.SubItems.Add(soil);
                    lvi.SubItems.Add(gas);
                    lvi.SubItems.Add(light);
                    lvi.SubItems.Add(temp);
                    lvi.SubItems.Add(humi);
                    lvi.SubItems.Add(ds.Tables[0].Rows[i]["date"].ToString());

                    listView11.Items.Add(lvi);




                }
            }
        }

        private void button6_Click(object sender, EventArgs e)
        {
            Form f2 = new Form2();
            f2.Show();
        }
    }
}
